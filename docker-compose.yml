version: "3"

services:
  # Node.js/Express backend service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ecommerce-app
    restart: always
    expose:
      - "3000"
    volumes:
      - ./:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - MONGO_URI=${MONGO_URI}
      - SESSION_SECRET=${SESSION_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      # 외부에서 접근 가능한 URL (중요함)
      - CALLBACK_URL=${CALLBACK_URL}
      - EVM_PK=${EVM_PK}
    depends_on:
      - mongo
    networks:
      - app-network

  # MongoDB service
  mongo:
    image: mongo:latest
    container_name: ecommerce-mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
      
  # NGINX service with HTTPS
  nginx:
    image: nginx:latest
    container_name: ecommerce-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/html:/usr/share/nginx/html
      - /etc/letsencrypt:/etc/letsencrypt:ro  # 로컬 인증서 경로를 마운트 (읽기 전용)
    depends_on:
      - app
    networks:
      - app-network

# Networks
networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  mongo-data:
    driver: local
